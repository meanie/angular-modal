{"version":3,"sources":["modal.service.js","meanie-angular-modal.min.js"],"names":["window","angular","undefined","module","provider","this","defaults","closeOnEsc","closeOnClick","template","templateUrl","scope","controller","controllerAs","resolve","locals","appendTo","overlay","wrapperClass","overlayClass","configs","setDefaults","extend","modal","name","config","forEach","$get","$rootScope","$q","$templateRequest","$injector","$controller","$compile","$document","$animate","getTemplatePromise","when","getResolvePromises","resolves","promises","item","isFunction","isArray","push","invoke","isString","get","appendAnimated","child","parent","children","length","enter","createOverlay","modalInstance","overlayElement","element","attr","class","find","eq","openModal","$$modal","html","content","on","event","target","currentTarget","preventDefault","stopPropagation","$apply","closeModal","then","openedDeferred","reason","reject","result","wasDismissed","resultDeferred","leave","$destroy","removeEventListener","Modal","open","options","Error","defer","opened","promise","close","dismiss","key","keyCode","which","addEventListener","all","concat","shift","$new","$close","$dismiss","$scope","$modalInstance","value"],"mappings":"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","file":"meanie-angular-modal.min.js","sourcesContent":["(function(window, angular, undefined) {'use strict';\n\n/**\n * Module definition and dependencies\n */\nangular.module('Modal.Service', [])\n\n/**\n * Service definition\n */\n.provider('$modal', function $modalProvider() {\n\n  /**\n   * Defaults\n   */\n  this.defaults = {\n    closeOnEsc: true,\n    closeOnClick: true,\n    template: null,\n    templateUrl: null,\n    scope: null,\n    controller: null,\n    controllerAs: null,\n    resolve: {},\n    locals: null,\n    appendTo: null,\n    overlay: true,\n    wrapperClass: 'modal-wrapper',\n    overlayClass: 'modal-overlay'\n  };\n\n  /**\n   * Store of predefined modal configs\n   */\n  this.configs = {};\n\n  /**\n   * Set defaults\n   */\n  this.setDefaults = function(defaults) {\n    this.defaults = angular.extend(this.defaults, defaults || {});\n    return this;\n  };\n\n  /**\n   * Predefine a modal config\n   */\n  this.modal = function(name, config) {\n\n    //Object hash given?\n    if (name && typeof name === 'object') {\n      angular.forEach(name, function(config, name) {\n        this.modal(name, config);\n      }, this);\n      return;\n    }\n\n    //Set config and return self\n    this.configs[name] = angular.extend({}, this.defaults, config || {});\n    return this;\n  };\n\n  /**\n   * Service getter\n   */\n  this.$get = ['$rootScope', '$q', '$templateRequest', '$injector', '$controller', '$compile', '$document', '$animate', function(\n    $rootScope, $q, $templateRequest, $injector,\n    $controller, $compile, $document, $animate\n  ) {\n\n    //Get defaults and configs\n    var defaults = this.defaults;\n    var configs = this.configs;\n\n    //Global overlay element\n    var overlayElement;\n\n    /**\n     * Helper to get template promise\n     */\n    function getTemplatePromise(template, templateUrl) {\n      if (template) {\n        return $q.when(template);\n      }\n      return $templateRequest(templateUrl, true);\n    }\n\n    /**\n     * Helper to get resolve promises\n     */\n    function getResolvePromises(resolves) {\n      var promises = [];\n      angular.forEach(resolves, function(item) {\n        if (angular.isFunction(item) || angular.isArray(item)) {\n          promises.push($q.when($injector.invoke(item)));\n        }\n        else if (angular.isString(item)) {\n          promises.push($q.when($injector.get(item)));\n        }\n        else {\n          promises.push($q.when(item));\n        }\n      });\n      return promises;\n    }\n\n    /**\n     * Append element to parent using the animate service\n     */\n    function appendAnimated(child, parent) {\n      var children = parent.children();\n      if (children.length > 0) {\n        return $animate.enter(child, parent, children[children.length - 1]);\n      }\n      return $animate.enter(child, parent);\n    }\n\n    /**\n     * Helper to create overlay element\n     */\n    function createOverlay(modalInstance, overlayClass) {\n\n      //Create element\n      overlayElement = angular.element('<div></div>').attr({\n        class: overlayClass\n      });\n\n      //Animate in\n      return appendAnimated(overlayElement, $document.find('body').eq(0));\n    }\n\n    /**\n     * Helper to open a modal\n     */\n    function openModal(modalInstance) {\n\n      //Access modal data object\n      var modal = modalInstance.$$modal;\n\n      //Create then compile modal element\n      modal.element = angular.element('<div></div>').attr({\n        class: modal.wrapperClass\n      }).html(modal.content);\n      modal.element = $compile(modal.element)(modal.scope);\n\n      //Close on click?\n      if (modal.closeOnClick) {\n        modal.element.on('click', function(event) {\n          if (event.target === event.currentTarget) {\n            event.preventDefault();\n            event.stopPropagation();\n            $rootScope.$apply(function() {\n              closeModal(modalInstance, 'cancel', true);\n            });\n          }\n        });\n      }\n\n      //Append animated and resolve opened deferred\n      return appendAnimated(modal.element, modal.parent).then(function() {\n        modal.openedDeferred.resolve(modalInstance);\n      }, function(reason) {\n        modal.openedDeferred.reject(reason);\n      });\n    }\n\n    /**\n     * Helper to close a modal\n     */\n    function closeModal(modalInstance, result, wasDismissed) {\n\n      //Access modal data object\n      var modal = modalInstance.$$modal;\n\n      //No element present?\n      if (!modal.element) {\n        return $q.when(true);\n      }\n\n      //Did we get a result\n      if (wasDismissed) {\n        modal.resultDeferred.reject(result);\n      }\n      else {\n        modal.resultDeferred.resolve(result);\n      }\n\n      //If overlay element present, remove it\n      if (overlayElement) {\n        $animate.leave(overlayElement).finally(function() {\n          overlayElement = null;\n        });\n      }\n\n      //Animate out\n      return $animate.leave(modal.element).then(function() {\n\n        //Clean up scope\n        if (modal.scope) {\n          modal.scope.$destroy();\n          modal.scope = null;\n        }\n\n        //Remove element reference\n        modal.element = null;\n\n        //Remove event listener\n        if (modal.closeOnEsc) {\n          $document[0].removeEventListener('keydown', modal.closeOnEsc);\n          modal.closeOnEsc = null;\n        }\n      });\n    }\n\n    /**\n     * Class definition\n     */\n    var Modal = {\n\n      /**\n       * Open a new modal\n       */\n      open: function(name, options) {\n\n        //No name given?\n        if (typeof name !== 'string') {\n          options = name || {};\n          name = '';\n        }\n\n        //Name given? Merge with predefined configs\n        if (name && configs[name] !== 'undefined') {\n          options = angular.extend({}, configs[name], options || {});\n        }\n        else if (name) {\n          throw new Error('String given as options, but config with name ' +\n            options + ' was not predefined');\n        }\n\n        //Validate options\n        options = angular.extend({}, defaults, options || {});\n        options.resolve = options.resolve || {};\n        options.appendTo = options.appendTo || $document.find('body').eq(0);\n\n        //Must have either template or template url specified\n        if (!options.template && !options.templateUrl) {\n          throw new Error('One of template or templateUrl options is required.');\n        }\n\n        if (!options.appendTo.length) {\n          throw new Error('Element to append modal to not found in the DOM.');\n        }\n\n        //Prepare modal data object\n        var modal = {\n          openedDeferred: $q.defer(),\n          resultDeferred: $q.defer(),\n          parent: options.appendTo,\n          wrapperClass: options.wrapperClass,\n          closeOnClick: options.closeOnClick\n        };\n\n        //Create modal instance\n        var modalInstance = {\n          $$modal: modal,\n          opened: modal.openedDeferred.promise,\n          result: modal.resultDeferred.promise,\n          close: function(result) {\n            return closeModal(modalInstance, result);\n          },\n          dismiss: function(reason) {\n            return closeModal(modalInstance, reason, true);\n          }\n        };\n\n        //Close on escape?\n        if (options.closeOnEsc) {\n          modal.closeOnEsc = function(event) {\n            var key = event.keyCode || event.which;\n            if (key === 27) {\n              $rootScope.$apply(function() {\n                closeModal(modalInstance, 'cancel', true);\n              });\n            }\n          };\n          $document[0].addEventListener('keydown', modal.closeOnEsc);\n        }\n\n        //Wait for template and resolves to resolve\n        $q.all([\n          getTemplatePromise(options.template, options.templateUrl)\n        ].concat(getResolvePromises(options.resolve))).then(function(resolves) {\n\n          //Get template content\n          modal.content = resolves.shift();\n\n          //Determine modal scope and link close/dismiss handlers\n          modal.scope = (options.scope || $rootScope).$new();\n          modal.scope.$close = modalInstance.close;\n          modal.scope.$dismiss = modalInstance.dismiss;\n\n          //Controller given?\n          if (options.controller) {\n\n            //Initialize controller vars\n            var locals = {};\n\n            //Provide scope and modal instance\n            locals.$scope = modal.scope;\n            locals.$modalInstance = modalInstance;\n\n            //Provide other passed locals\n            if (options.locals && typeof options.locals === 'object') {\n              angular.forEach(options.locals, function(value, key) {\n                locals[key] = value;\n              });\n            }\n\n            //Provide resolved values\n            angular.forEach(options.resolve, function(value, key) {\n              locals[key] = resolves.shift();\n            });\n\n            //Create controller instance\n            modal.controller = $controller(options.controller, locals);\n            if (options.controllerAs) {\n              modal.scope[options.controllerAs] = modal.controller;\n            }\n          }\n\n          //Open modal now\n          openModal(modalInstance);\n\n          //Create overlay\n          if (options.overlay) {\n            createOverlay(modalInstance, options.overlayClass);\n          }\n        }, function(reason) {\n          modal.openedDeferred.reject(reason);\n          modal.resultDeferred.reject(reason);\n        });\n\n        //Return modal instance\n        return modalInstance;\n      }\n    };\n\n    //Return the service\n    return Modal;\n  }];\n});\n\n})(window, window.angular);\n","/**\n * meanie-angular-modal - v1.0.0 - 12-10-2015\n * https://github.com/meanie/angular-modal\n *\n * Copyright (c) 2015 Adam Buczynski <me@adambuczynski.com>\n * License: MIT\n */\n!function(e,n,t){\"use strict\";n.module(\"Modal.Service\",[]).provider(\"$modal\",function(){this.defaults={closeOnEsc:!0,closeOnClick:!0,template:null,templateUrl:null,scope:null,controller:null,controllerAs:null,resolve:{},locals:null,appendTo:null,overlay:!0,wrapperClass:\"modal-wrapper\",overlayClass:\"modal-overlay\"},this.configs={},this.setDefaults=function(e){return this.defaults=n.extend(this.defaults,e||{}),this},this.modal=function(e,t){return e&&\"object\"==typeof e?void n.forEach(e,function(e,n){this.modal(n,e)},this):(this.configs[e]=n.extend({},this.defaults,t||{}),this)},this.$get=[\"$rootScope\",\"$q\",\"$templateRequest\",\"$injector\",\"$controller\",\"$compile\",\"$document\",\"$animate\",function(e,t,o,r,l,s,c,i){function a(e,n){return e?t.when(e):o(n,!0)}function u(e){var o=[];return n.forEach(e,function(e){n.isFunction(e)||n.isArray(e)?o.push(t.when(r.invoke(e))):n.isString(e)?o.push(t.when(r.get(e))):o.push(t.when(e))}),o}function d(e,n){var t=n.children();return t.length>0?i.enter(e,n,t[t.length-1]):i.enter(e,n)}function p(e,t){return m=n.element(\"<div></div>\").attr({\"class\":t}),d(m,c.find(\"body\").eq(0))}function f(t){var o=t.$$modal;return o.element=n.element(\"<div></div>\").attr({\"class\":o.wrapperClass}).html(o.content),o.element=s(o.element)(o.scope),o.closeOnClick&&o.element.on(\"click\",function(n){n.target===n.currentTarget&&(n.preventDefault(),n.stopPropagation(),e.$apply(function(){h(t,\"cancel\",!0)}))}),d(o.element,o.parent).then(function(){o.openedDeferred.resolve(t)},function(e){o.openedDeferred.reject(e)})}function h(e,n,o){var r=e.$$modal;return r.element?(o?r.resultDeferred.reject(n):r.resultDeferred.resolve(n),m&&i.leave(m)[\"finally\"](function(){m=null}),i.leave(r.element).then(function(){r.scope&&(r.scope.$destroy(),r.scope=null),r.element=null,r.closeOnEsc&&(c[0].removeEventListener(\"keydown\",r.closeOnEsc),r.closeOnEsc=null)})):t.when(!0)}var m,v=this.defaults,w=this.configs,$={open:function(o,r){if(\"string\"!=typeof o&&(r=o||{},o=\"\"),o&&\"undefined\"!==w[o])r=n.extend({},w[o],r||{});else if(o)throw new Error(\"String given as options, but config with name \"+r+\" was not predefined\");if(r=n.extend({},v,r||{}),r.resolve=r.resolve||{},r.appendTo=r.appendTo||c.find(\"body\").eq(0),!r.template&&!r.templateUrl)throw new Error(\"One of template or templateUrl options is required.\");if(!r.appendTo.length)throw new Error(\"Element to append modal to not found in the DOM.\");var s={openedDeferred:t.defer(),resultDeferred:t.defer(),parent:r.appendTo,wrapperClass:r.wrapperClass,closeOnClick:r.closeOnClick},i={$$modal:s,opened:s.openedDeferred.promise,result:s.resultDeferred.promise,close:function(e){return h(i,e)},dismiss:function(e){return h(i,e,!0)}};return r.closeOnEsc&&(s.closeOnEsc=function(n){var t=n.keyCode||n.which;27===t&&e.$apply(function(){h(i,\"cancel\",!0)})},c[0].addEventListener(\"keydown\",s.closeOnEsc)),t.all([a(r.template,r.templateUrl)].concat(u(r.resolve))).then(function(t){if(s.content=t.shift(),s.scope=(r.scope||e).$new(),s.scope.$close=i.close,s.scope.$dismiss=i.dismiss,r.controller){var o={};o.$scope=s.scope,o.$modalInstance=i,r.locals&&\"object\"==typeof r.locals&&n.forEach(r.locals,function(e,n){o[n]=e}),n.forEach(r.resolve,function(e,n){o[n]=t.shift()}),s.controller=l(r.controller,o),r.controllerAs&&(s.scope[r.controllerAs]=s.controller)}f(i),r.overlay&&p(i,r.overlayClass)},function(e){s.openedDeferred.reject(e),s.resultDeferred.reject(e)}),i}};return $}]})}(window,window.angular);\n//# sourceMappingURL=meanie-angular-modal.min.js.map\n"],"sourceRoot":"/source/"}